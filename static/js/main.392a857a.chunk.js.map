{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","_ref","id","fetchedUser","dataUser","spinner","react_default","a","createElement","vkui","title","before","photo_200","src","description","concat","first_name","last_name","style","display","alignItems","flexDirection","size","marginTop","indicator","Counter_default","type","p_likes","p_flikes","p_tlikes","p_alllikes","p_gposts","p_gcomm","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","go","e","setState","activePanel","currentTarget","dataset","to","state","http_web_site","userData","photoState","dataState","_this2","connect","subscribe","detail","data","fetch","then","res","json","response","console","log","send","panels_Home","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.392a857a.chunk.js","sourcesContent":["import React from 'react';\nimport { Panel, ListItem, Group, Avatar, PanelHeader, List, Cell, Spinner } from '@vkontakte/vkui';\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter';\n\nconst Home = ({ id, fetchedUser, dataUser, spinner }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Информация об участнике</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"Информация\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={\"Участник конкурса\"}>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t{spinner &&\n\t\t<div style={{display: 'flex', alignItems: 'center', flexDirection: 'colomn'}}>\n\t\t\t<Spinner size=\"large\" style={{ marginTop: 20 }}/>\n\t\t</div>}\n\n\t\t{dataUser &&\n\t\t<Group title=\"Ваши баллы\">\n\t\t\t<List>\n\t\t\t\t<Cell indicator={<Counter type=\"primary\">{dataUser ? dataUser.p_likes : \"-1\"}</Counter>}>Лайки</Cell>\n\t\t\t\t<Cell indicator={<Counter type=\"primary\">{dataUser ? dataUser.p_flikes : \"-1\"}</Counter>}>Лайки первым</Cell>\n\t\t\t\t<Cell indicator={<Counter type=\"primary\">{dataUser ? dataUser.p_tlikes : \"-1\"}</Counter>}>Лайки в числе первых</Cell>\n\t\t\t\t<Cell indicator={<Counter type=\"primary\">{dataUser ? dataUser.p_alllikes : \"-1\"}</Counter>}>Лайки всех постов за день</Cell>\n\t\t\t\t<Cell indicator={<Counter type=\"primary\">{dataUser ? dataUser.p_gposts : \"-1\"}</Counter>}>Хорошие посты</Cell>\n\t\t\t\t<Cell indicator={<Counter type=\"primary\">{dataUser ? dataUser.p_gcomm : \"-1\"}</Counter>}>Хорошие комментарии</Cell>\n\t\t\t</List>\n\t\t</Group>}\n\t</Panel>\n);\n\nexport default Home;","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\thttp_web_site: 'https://pso31.ru/active_pso/vkapp/',\n\t\t\tuserData: null,\n\t\t\tphotoState: true,\n\t\t\tdataState: true,\n\t\t\tfetchedUser: null\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tfetch(this.state.http_web_site + \"/api/method/users.Get.php?user_id=\" + this.state.fetchedUser.id)\n\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t.then((data) => (\n\t\t\t\t\t\tthis.setState({ userData: data.response }),\n\t\t\t\t\t\tthis.setState({ dataState: false })\n\t\t\t\t\t))\n\n\t\t\t\t\tfetch(this.state.http_web_site + \"/api/method/users.setPhoto.php?user_id=\" + this.state.fetchedUser.id + \"&photo=\" + this.state.fetchedUser.photo_200)\n\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t.then((data) => (\n\t\t\t\t\t\tthis.setState({ photoState: false }),\n\t\t\t\t\t\tconsole.log(data.response)\n\t\t\t\t\t))\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} dataUser={this.state.userData} spinner={this.state.dataState} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}